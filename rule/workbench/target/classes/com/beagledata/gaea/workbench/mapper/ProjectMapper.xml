<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beagledata.gaea.workbench.mapper.ProjectMapper">
    <resultMap id="projectResultMap" type="com.beagledata.gaea.workbench.entity.Project">
        <id property="id" column="id"/>
        <result property="uuid" column="uuid"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="auditCount" column="audit_count" />
        <association property="creator" javaType="User" resultMap="userResultMap"/>
    </resultMap>

    <resultMap id="userResultMap" type="User">
        <result property="username" column="username"/>
        <result property="uuid" column="creator_uuid"/>
        <result property="realname" column="realname"/>
    </resultMap>

    <resultMap id="BaseResultMap" type="com.beagledata.gaea.workbench.entity.Assets">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="uuid" property="uuid" jdbcType="CHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="project_uuid" property="projectUuid" jdbcType="CHAR"/>
        <result column="projectName" property="projectName"/>
        <result column="content" property="content"/>
        <result column="now_version" property="nowVersion"/>
        <result column="is_locked" property="lock"/>
        <result column="projectId" property="projectId" jdbcType="INTEGER"/>
        <result column="dir_parent_id" property="dirParentId"/>
        <association property="creator" javaType="User" resultMap="userResultMap"/>
    </resultMap>

    <resultMap id="ResultMapWithBLOBs" type="com.beagledata.gaea.workbench.entity.Assets" extends="BaseResultMap">
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    </resultMap>

    <resultMap id="knowledgePackageResultMap" type="com.beagledata.gaea.workbench.entity.KnowledgePackage">
        <id property="id" column="id"/>
        <result property="uuid" column="uuid"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="projectUuid" column="project_uuid"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="deleteVersion" column="delete_version"/>
        <result column="package_uuid" property="packageUuid" jdbcType="VARCHAR"/>
        <result column="assets_uuid" property="assetsUuid" jdbcType="VARCHAR"/>
        <result property="projectName" column="projectName"/>
    </resultMap>

    <resultMap id="assetVersionResultMap" type="com.beagledata.gaea.workbench.entity.AssetsVersion">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="asset_uuid" property="assetUuid" jdbcType="CHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="version_no" property="versionNo" jdbcType="INTEGER"/>
        <result column="version_des" property="versionDes" jdbcType="VARCHAR"/>
        <result column="now_version" property="nowVersion" jdbcType="INTEGER"/>
        <result column="username" property="creatorName" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="assets_name" property="assetsName" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="projectName" property="projectName" jdbcType="VARCHAR"/>
        <result column="projectId" property="projectId" jdbcType="INTEGER"/>
        <result column="projectUuid" property="projectUuid" jdbcType="VARCHAR"/>
        <association property="creator" javaType="User" resultMap="userResultMap"/>
    </resultMap>

    <resultMap id="knowledgeAssetsVersionPackageResultMap"
               type="com.beagledata.gaea.workbench.entity.KnowledgePackageAssets">
        <id property="id" column="id"/>
        <result property="packageUuid" column="package_uuid"/>
        <result property="assetsUuid" column="assets_uuid"/>
        <result property="assetsVersion" column="assets_version"/>
    </resultMap>

    <resultMap id="VersionMapWithBLOBs" type="com.beagledata.gaea.workbench.entity.AssetsVersion"
               extends="assetVersionResultMap">
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_project (uuid, create_time,  name, description, creator_uuid, update_time)
        VALUES (#{uuid}, NOW(), #{name}, #{description}, #{creator.uuid}, NOW())
    </insert>

    <update id="delete">
        UPDATE t_project
        SET update_time = NOW(), is_deleted = TRUE, delete_version = id
        WHERE uuid = #{uuid}
    </update>

    <update id="update">
        UPDATE t_project
        <set>
            update_time = NOW()
            <if test="name != null and name != ''">
                , name = #{name}
            </if>
            <if test="description != null">
                , description = #{description}
            </if>
        </set>
        WHERE uuid = #{uuid} AND !is_deleted
    </update>

    <select id="selectPage" resultMap="projectResultMap">
        SELECT DISTINCT t1.id, t1.uuid, t1.create_time, t1.update_time, t1.name, t1.description, t2.username, t2.realname,
        (
          SELECT
            COUNT(*)
          FROM
            t_project tp
            LEFT JOIN t_knowledge_package tkp ON tp.uuid = tkp.project_uuid
            LEFT JOIN t_knowledge_package_baseline tkpb ON tkp.uuid = tkpb.package_uuid
            WHERE
              tkpb.state = '1'
            AND tp.uuid = t1.uuid AND !tkp.is_deleted AND !tkpb.is_deleted
        ) AS audit_count
        FROM t_project t1
        LEFT JOIN t_user t2
        ON t1.creator_uuid = t2.uuid
        <if test="isAdmin == false">
            RIGHT JOIN t_project_user t3 ON t1.uuid = t3.project_uuid
        </if>
        WHERE !t1.is_deleted
        <if test="isAdmin == false">
            <choose>
                <when test="isOrg == false">
                    AND t3.user_uuid = #{userUuid}
                </when>
                <otherwise>
                    AND (
                      t3.user_uuid = #{userUuid}
                      OR t2.org_uuid = (SELECT t4.org_uuid FROM <include refid="com.beagledata.gaea.workbench.mapper.UserMapper.union_users" /> t4 WHERE t4.uuid = #{userUuid}))
                </otherwise>
            </choose>
        </if>

        <if test="name != null and name != ''">
            AND (t1.name LIKE "%"#{name}"%" OR t2.realname  LIKE "%"#{name}"%")
        </if>
        ORDER BY audit_count DESC,
        <choose>
            <when test="sortField != null and sortField == 'createTime'">
                t1.create_time
            </when>
            <otherwise>
                t1.update_time
            </otherwise>
        </choose>
        <choose>
            <when test="sortDirection != null and sortDirection == 'asc'">
                ASC, t1.id ASC
            </when>
            <otherwise>
                DESC, t1.id DESC
            </otherwise>
        </choose>
        <if test="start != null and end != null">
            LIMIT #{start},#{end}
        </if>
    </select>

    <select id="count" resultType="Integer">
        SELECT COUNT(1)
        FROM t_project t1
        LEFT JOIN t_user t2
        ON t1.creator_uuid = t2.uuid
        <if test="isAdmin == false">
            RIGHT JOIN t_project_user t3 ON t1.uuid = t3.project_uuid
        </if>
        WHERE !t1.is_deleted
        <if test="isAdmin == false">
            <choose>
                <when test="isOrg == false">
                    AND t3.user_uuid = #{userUuid}
                </when>
                <otherwise>
                    AND (t3.user_uuid = #{userUuid}
                    OR t2.org_uuid = (SELECT t4.org_uuid FROM <include refid="com.beagledata.gaea.workbench.mapper.UserMapper.union_users" /> t4 WHERE t4.uuid = #{userUuid}))
                </otherwise>
            </choose>
        </if>
        <if test="name != null and name != ''">
            AND (t1.name LIKE "%"#{name}"%" OR t2.realname  LIKE "%"#{name}"%")
        </if>
    </select>

    <select id="selectByUuid" resultMap="projectResultMap">
        SELECT id, uuid, create_time, update_time, name, description, creator_uuid
        FROM t_project
        WHERE uuid = #{uuid} AND !is_deleted
    </select>

    <select id="selectByUuidForUser" resultMap="projectResultMap">
        SELECT t1.id, t1.uuid, t1.create_time, t1.update_time, t1.name, t1.description, t1.creator_uuid
        FROM t_project t1
        LEFT JOIN <include refid="com.beagledata.gaea.workbench.mapper.UserMapper.union_users" /> t2 ON t1.creator_uuid = t2.uuid
        <if test="isAdmin == false">
            RIGHT JOIN t_project_user t3 ON t1.uuid = t3.project_uuid
        </if>
        WHERE t1.uuid = #{uuid} AND !t1.is_deleted
        <if test="isAdmin == false">
            <choose>
                <when test="isOrg == false">
                    AND t3.user_uuid = #{userUuid}
                </when>
                <otherwise>
                    AND (t3.user_uuid = #{userUuid}
                    OR t2.org_uuid = (SELECT t4.org_uuid FROM <include refid="com.beagledata.gaea.workbench.mapper.UserMapper.union_users" /> t4 WHERE t4.uuid = #{userUuid}))
                </otherwise>
            </choose>
        </if>
    </select>

    <select id="countEffectiveService" resultType="Integer">
        SELECT
            COUNT(*)
        FROM t_project p
            JOIN t_knowledge_package kp ON p.uuid = kp.project_uuid
            JOIN t_knowledge_package_baseline kpb ON kp.uuid = kpb.package_uuid
        WHERE
            kpb.state = 3 AND p.uuid = #{uuid}
    </select>

    <update id="deleteProjectService">
        UPDATE t_micro
        SET update_time = NOW(), is_deleted = true, delete_version = id
        WHERE
            package_uuid IN (
                SELECT
                    uuid
                FROM
                    t_knowledge_package
                WHERE
                    project_uuid = #{uuid}
            )
    </update>

    <update id="updateOnUploadBaseline">
        UPDATE t_micro
        SET name = #{name}, is_deleted = false , delete_version = 0
        WHERE
            uuid = #{uuid}
    </update>

    <select id="selectOnUploadBaseline" resultMap="projectResultMap">
        SELECT id, uuid, create_time, update_time, name, description, creator_uuid
        FROM t_project
        WHERE uuid = #{uuid}
    </select>

    <select id="selectByUserUuid" resultMap="projectResultMap">
        SELECT DISTINCT t1.id, t1.uuid, t1.create_time, t1.update_time, t1.name, t1.description, t2.username, t2.realname,
        (
          SELECT
            COUNT(*)
          FROM
            t_project tp
            LEFT JOIN t_knowledge_package tkp ON tp.uuid = tkp.project_uuid
            LEFT JOIN t_knowledge_package_baseline tkpb ON tkp.uuid = tkpb.package_uuid
            WHERE
              tkpb.state = '1'
            AND tp.uuid = t1.uuid AND !tkp.is_deleted AND !tkpb.is_deleted
        ) AS audit_count
        FROM t_project t1
        LEFT JOIN t_user t2 ON t1.creator_uuid = t2.uuid
        RIGHT JOIN t_project_user t3 ON t1.uuid = t3.project_uuid
		WHERE !t1.is_deleted AND !t2.is_deleted
		AND t3.user_uuid = #{userUuid}
        <if test="projectName != null and projectName != ''">
            AND t1.name LIKE CONCAT("%",#{projectName},"%")
        </if>
        ORDER BY audit_count DESC,
        <choose>
            <when test="sortField != null and sortField == 'createTime'">
                t1.create_time
            </when>
            <otherwise>
                t1.update_time
            </otherwise>
        </choose>
        <choose>
            <when test="sortDirection != null and sortDirection == 'asc'">
                ASC, t1.id ASC
            </when>
            <otherwise>
                DESC, t1.id DESC
            </otherwise>
        </choose>
        <if test="start != null and end != null">
            LIMIT #{start},#{end}
        </if>
    </select>

    <select id="selectCountByUserUuid" resultType="int">
        SELECT COUNT(1)
        FROM t_project t1
        LEFT JOIN t_user t2 ON t1.creator_uuid = t2.uuid
        RIGHT JOIN t_project_user t3 ON t1.uuid = t3.project_uuid
		WHERE !t1.is_deleted AND !t2.is_deleted
		AND t3.user_uuid = #{userUuid}
        <if test="projectName != null and projectName != ''">
            AND t1.name LIKE CONCAT("%",#{projectName},"%")
        </if>
    </select>

    <select id="selectByProjectName" resultMap="projectResultMap">
        select id, uuid, name, create_time from t_project
        where !is_deleted and name = #{projectName}
    </select>
</mapper>