<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beagledata.gaea.workbench.mapper.PermissionMapper">
    <resultMap id="BaseResultMap" type="Permission">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="uuid" jdbcType="CHAR" property="uuid"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="resource" jdbcType="VARCHAR" property="resource"/>
        <result column="action" jdbcType="VARCHAR" property="action"/>
        <result column="identity" jdbcType="VARCHAR" property="identity"/>
        <result column="module" jdbcType="VARCHAR" property="module"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, create_time, update_time, name, resource, action, identity, module
  </sql>

    <select id="selectAll" resultMap="BaseResultMap">
    select id, name, resource, action, identity, module
    from t_permission
    ORDER BY resource ASC, action ASC
  </select>

    <select id="selectCount" resultType="java.lang.Integer">
    select count(1)
    from t_permission
  </select>

    <select id="selectByRoleId" resultMap="BaseResultMap">
        select t1.id, t1.name, t1.resource, t1.action, t1.identity, module
        from t_permission t1, t_role_permission t2
        where t2.role_id = #{roleId} and t1.id = t2.permission_id
        <if test="start != null and limit != null">
            limit #{start}, #{limit}
        </if>
    </select>

    <select id="selectCountByRoleId" resultType="java.lang.Integer">
    select count(1)
    from t_permission t1, t_role_permission t2
    where t2.role_id = #{roleId} and t1.id = t2.permission_id
  </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_permission (create_time, name, resource, action, identity, module)
        VALUES (NOW(), #{name}, #{resource}, #{action}, #{identity}, #{module})
    </insert>

    <select id="selectByName" resultMap="BaseResultMap">
        SELECT id, name, resource, action, identity, module
        FROM t_permission
        WHERE name = #{name}
    </select>

    <insert id="insertRoleAndPermissions">
        INSERT INTO t_role (code, name, create_time)
        VALUE (#{code}, #{name}, NOW())
        ON DUPLICATE KEY UPDATE
        name = #{name};
        <foreach collection="permissions" close="" index="index" item="item" open="" separator=";">
            INSERT INTO t_role_permission (role_id, permission_id)
            SELECT t1.id AS role_id, t2.id AS permission_id
            FROM t_role t1, t_permission t2
            WHERE
              t1.code = #{code}
              AND t2.resource = #{item.resource}
              AND t2.action = #{item.action}
              AND t2.identity = #{item.identity}
            ON DUPLICATE KEY UPDATE
            role_id = VALUES(role_id), permission_id = VALUES(permission_id)
        </foreach>
    </insert>

    <select id="selectAllByRoleCode" resultMap="BaseResultMap">
        SELECT t1.name, t1.resource, t1.action, t1.identity, t1.module FROM t_permission t1 JOIN t_role_permission t2 ON t1.id = t2.permission_id
        JOIN t_role t3 ON t2.role_id = t3.id AND t3.code = #{roleCode}
    </select>

    <delete id="deleteRoleAndPermissions">
        <foreach collection="set" close="" index="index" item="item" open="" separator=";">
            DELETE t1 FROM
                t_role_permission t1,
                t_permission t2,
                t_role t3
            WHERE
                t1.permission_id = t2.id
            AND t1.role_id = t3.id
            AND t2.resource = #{item.resource} AND t2.action = #{item.action} AND t2.identity = #{item.identity}
            AND t3.code = #{roleCode}
        </foreach>
    </delete>

    <select id="selectSystemRoleIdByCode" resultType="Integer">
        SELECT id FROM t_role WHERE code = #{code} LIMIT 1;
    </select>
</mapper>