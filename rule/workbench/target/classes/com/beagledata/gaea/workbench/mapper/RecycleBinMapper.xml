<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.beagledata.gaea.workbench.mapper.RecycleBinMapper">
    <resultMap id="BaseResultMap" type="RecycleBin">
        <id column="id" property="id" />
        <result column="uuid" property="uuid" />
        <result column="create_time" property="createTime" />
        <result column="assets_uuid" property="assetsUuid" />
        <result column="assets_type" property="assetsType" />
        <result column="assets_name" property="assetsName" />
        <result column="project_uuid" property="projectUuid" />
        <result column="type" property="type" />
        <association property="creator" javaType="User" resultMap="userResultMap" />
    </resultMap>

    <resultMap id="userResultMap" type="User">
        <result property="realname" column="realname" />
        <result property="uuid" column="user_uuid" />
    </resultMap>

    <sql id="Column_List">
        t1.uuid, t1.create_time, t1.assets_uuid, t1.project_uuid, t1.assets_type, t1.assets_name,
        t2.realname, t2.uuid as user_uuid
    </sql>

    <select id="selectByUuid" resultMap="BaseResultMap">
        SELECT <include refid="Column_List" />
        FROM  t_recycle_bin t1 LEFT JOIN <include refid="com.beagledata.gaea.workbench.mapper.UserMapper.union_users" /> t2 ON t1.creator_uuid = t2.uuid
        WHERE t1.uuid = #{uuid}
    </select>

    <select id="selectList" resultMap="BaseResultMap">
        SELECT
            t1.uuid, t1.create_time, t1.assets_uuid, t1.project_uuid,
            SUBSTRING_INDEX(t1.assets_type, '_', -1) assets_type, t1.assets_name, t2.realname, t2.uuid as user_uuid, SUBSTRING_INDEX(t1.assets_type, '_', 1) type
        FROM t_recycle_bin t1 LEFT JOIN <include refid="com.beagledata.gaea.workbench.mapper.UserMapper.union_users" /> t2 ON t1.creator_uuid = t2.uuid
        WHERE
            t1.project_uuid = #{recycleBin.projectUuid}
            <if test="recycleBin.assetsType != null and recycleBin.assetsType != ''">
                AND t1.assets_type = #{recycleBin.assetsType}
            </if>
        ORDER BY t1.id DESC
        <if test="start != null and end != null">
            limit #{start}, #{end}
        </if>
    </select>

    <select id="count" resultType="java.lang.Integer">
        SELECT count(1)
        FROM t_recycle_bin t1
        WHERE
          t1.project_uuid = #{recycleBin.projectUuid}
        <if test="recycleBin.assetsType != null and recycleBin.assetsType != ''">
            AND t1.assets_type = #{recycleBin.assetsType}
        </if>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_recycle_bin (create_time, uuid, project_uuid, assets_uuid, assets_type, assets_name, creator_uuid)
        VALUES (NOW(), #{uuid}, #{projectUuid}, #{assetsUuid},
        #{assetsType}, #{assetsName}, #{creator.uuid})
    </insert>

    <delete id="delete">
        DELETE FROM t_recycle_bin WHERE uuid IN
        <foreach collection="uuids.split(',')" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <delete id="deleteByAssetsUuids">
        DELETE FROM t_recycle_bin WHERE assets_uuid IN
            <foreach collection="collection" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
    </delete>

    <delete id="deleteByProject">
        DELETE FROM t_recycle_bin WHERE project_uuid = #{projectUuid};
    </delete>

    <!--根据uuid查询需要还原的子文件夹 -->
    <select id="selectRestoreChildFolderUuids" resultType="String">
        SELECT
            tf.uuid
        FROM t_folder tf JOIN t_recycle_bin trb ON tf.uuid = trb.assets_uuid
        WHERE tf.parent_id IN
        <foreach collection="collection" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!--根据文件夹uuid查询需要还原的资源文件 -->
    <select id="selectRestoreAssetsUuidsByDirUuids" resultType="String">
        SELECT
            tf.uuid
        FROM t_assets tf JOIN t_recycle_bin trb ON tf.uuid = trb.assets_uuid
        WHERE tf.dir_parent_id IN
        <foreach collection="collection" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!--还原文件夹以及子文件夹 -->
    <update id="restoreFolder">
        UPDATE t_folder
        SET is_deleted = FALSE , delete_version = 0, update_time = NOW()
        WHERE uuid IN
        <foreach collection="collection" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!--还原模版 -->
    <update id="restoreTemplate">
        UPDATE t_assets_template SET is_deleted = 0, delete_version = 0, update_time = NOW()
        WHERE uuid IN
        <foreach collection="collection" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!-- 资源类文件，直接还原 -->
    <update id="restoreAssets">
        UPDATE t_assets SET is_deleted = 0, delete_version = 0, update_time = NOW(), editor = null, edit_time = null
        WHERE uuid IN
        <foreach collection="collection" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>;
        UPDATE t_assets_version SET is_deleted = 0, delete_version = 0, update_time = NOW()
        WHERE assets_uuid IN
        <foreach collection="collection" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="selectNodesByAssetsUuid" resultType="Map">
        SELECT
            IF(tf.parent_id = '0', tf.category_name, tf.parent_id) ditParentId,
            tf.uuid uuid,
            tf.dir_name name,
            tf.category_name type,
            false as leaf
        FROM
            t_recycle_bin trb
            JOIN t_folder tf ON trb.assets_uuid = tf.uuid
        WHERE
            trb.assets_type LIKE 'dir_%'
            AND trb.project_uuid = #{projectUuid}
            AND trb.assets_uuid IN
            <foreach collection="uuids" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        UNION
        SELECT
            IF(ta.dir_parent_id = '0', trb.assets_type, ta.dir_parent_id) dirParentId,
                ta.uuid,
                ta.name,
                trb.assets_type,
                true as leaf
            FROM
                t_recycle_bin trb
                JOIN t_assets ta ON trb.assets_uuid = ta.uuid
            WHERE
                trb.assets_type NOT LIKE 'dir_%'
                AND trb.assets_type NOT LIKE 'tpl_%'
                AND trb.project_uuid = #{projectUuid}
                AND trb.assets_uuid IN
                <foreach collection="uuids" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
        UNION
        SELECT
            trb.assets_type dirParentId,
            ta.uuid,
            ta.name,
            trb.assets_type,
            true as leaf
        FROM
            t_recycle_bin trb
            JOIN t_assets_template ta ON trb.assets_uuid = ta.uuid
        WHERE
            trb.assets_type LIKE 'tpl_%'
            AND trb.project_uuid = #{projectUuid}
            AND trb.assets_uuid IN
            <foreach collection="uuids" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
    </select>

    <insert id="insertBatch">
        INSERT INTO  t_recycle_bin (create_time, uuid, project_uuid, assets_uuid, assets_type, assets_name, creator_uuid)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (NOW(), #{item.uuid}, #{item.projectUuid}, #{item.assetsUuid},
            #{item.assetsType}, #{item.assetsName}, #{item.creator.uuid})
        </foreach>
    </insert>
</mapper>