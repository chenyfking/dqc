<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beagledata.gaea.workbench.mapper.TokenMapper">
    <resultMap id="BaseResultMap" type="com.beagledata.gaea.workbench.entity.Token">
        <id column="id" property="id"/>
        <result column="uuid" property="uuid"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="token" jdbcType="CHAR" property="token"/>
        <result column="creator_uuid" property="creatorUuid"/>
        <result column="creatorName" property="creatorName"/>
        <result column="is_all" property="all"/>
        <collection property="microUuids" ofType="String" column="token" select="selectMicroUuids" />
    </resultMap>

    <select id="selectMicroUuids" resultType="String">
        SELECT micro_uuid FROM t_micro_token WHERE token = #{token}
    </select>

    <select id="selectList" resultMap="BaseResultMap">
        SELECT t.create_time, t.creator_uuid, t.id, t.name, t.token, t.update_time, t.uuid, u.realname AS
        creatorName,is_all
        FROM t_token t
        LEFT JOIN
        <include refid="com.beagledata.gaea.workbench.mapper.UserMapper.union_users"/>
        u
        ON u.uuid = t.creator_uuid
        <where>
            !t.is_deleted
            <if test="token.creatorName != null and token.creatorName != ''">
                AND u.realname LIKE #{token.creatorName}
            </if>
            <if test="token.name != null and token.name != ''">
                AND t.name LIKE #{token.name}
            </if>
        </where>
        ORDER BY t.id DESC
        <if test="start != null and limit != null">
            LIMIT #{start}, #{limit}
        </if>
    </select>

    <select id="countTotal" resultType="int">
        SELECT COUNT(1)
        FROM t_token t
        LEFT JOIN
        <include refid="com.beagledata.gaea.workbench.mapper.UserMapper.union_users"/>
        u
        ON u.uuid = t.creator_uuid
        <where>
            !t.is_deleted
            <if test="creatorName != null and creatorName != ''">
                AND u.realname LIKE #{creatorName}
            </if>
            <if test="name != null and name != ''">
                AND t.name LIKE #{name}
            </if>
        </where>
    </select>

    <update id="delete">
        UPDATE t_token
        SET update_time = NOW(), is_deleted = true, delete_version = id
        WHERE uuid = #{uuid}
    </update>

    <delete id="deleteMicroToken">
        DELETE FROM t_micro_token WHERE token = #{token}
    </delete>

    <insert id="insert">
        INSERT INTO t_token (uuid, create_time, name, token, creator_uuid, is_all)
        VALUES (#{uuid}, NOW(), #{name}, #{token}, #{creatorUuid}, #{all})
    </insert>

    <update id="update">
        UPDATE t_token
        SET update_time = NOW(), is_all = #{all}, name = #{name}
        WHERE uuid = #{uuid}
    </update>

    <insert id="insertBatchMicroToken">
        INSERT INTO t_micro_token (micro_uuid, token)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.microUuid}, #{item.token} )
        </foreach>
    </insert>

    <select id="selectByName" resultMap="BaseResultMap">
        SELECT uuid, is_all, name, token
        FROM t_token
        WHERE name = #{name} AND !is_deleted
    </select>

    <select id="selectByUuid" resultMap="BaseResultMap">
        SELECT uuid, is_all, name, token
        FROM t_token
        WHERE uuid = #{uuid} AND !is_deleted
    </select>
</mapper>