<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beagledata.gaea.workbench.mapper.AiModelMapper">
    <resultMap id="aiModelResultMap" type="AiModel">
        <id property="id" column="id" />
        <result property="uuid" column="uuid" />
        <result property="createTime" column="create_time" />
        <result property="updateTime" column="update_time" />
        <result property="modelName" column="model_name" />
        <result property="jarName" column="jar_name" />
        <result property="enable" column="is_enable" />
        <result property="params" column="params" />
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_aimodel
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="enable != null and enable == false">
                is_enable,
            </if>
            uuid, create_time, update_time, model_name, jar_name, params
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="enable != null and enable == false">
                #{enable},
            </if>
            #{uuid}, NOW(), NOW(), #{modelName}, #{jarName}, #{params}
        </trim>
        ON DUPLICATE KEY UPDATE jar_name = #{jarName}, model_name = #{modelName}, update_time = NOW(), params = #{params}
    </insert>

    <update id="update">
        UPDATE t_aimodel
        <set>
            update_time = NOW()
            <if test="modelName != null and modelName != ''">
                ,model_name = #{modelName}
            </if>
            <if test="jarName != null and jarName != ''">
                ,jar_name = #{jarName}
            </if>
            <if test="params != null and params != ''">
                ,params = #{params}
            </if>
        </set>
        WHERE uuid = #{uuid}
    </update>

    <update id="updateEnable">
        UPDATE t_aimodel
        SET update_time = NOW(), is_enable = #{enable}
        WHERE uuid = #{uuid}
    </update>

    <update id="delete">
        UPDATE t_aimodel SET is_deleted = true, delete_version = id WHERE uuid = #{uuid}
    </update>

    <select id="selectAll" resultMap="aiModelResultMap">
        SELECT t1.id, t1.uuid, t1.create_time, t1.update_time, t1.model_name, t1.jar_name,  t1.is_enable, t1.params
        FROM t_aimodel t1 WHERE !t1.is_deleted
        <if test="aiModel != null">
            <if test="aiModel.enable == true">
                AND t1.is_enable = 1
            </if>
            <if test="aiModel.modelName != null and aiModel.modelName != ''">
                AND (
                t1.model_name like concat('%',#{aiModel.modelName},'%')
                  OR t1.jar_name like concat('%',#{aiModel.modelName},'%')
                )
            </if>
        </if>
        ORDER BY
        <choose>
            <when test="sortField != null and sortField == 'createTime'">
                t1.create_time
            </when>
            <otherwise>
                t1.update_time
            </otherwise>
        </choose>
        <choose>
            <when test="sortDirection != null and sortDirection == 'asc'">
                ASC, t1.id ASC
            </when>
            <otherwise>
                DESC, t1.id DESC
            </otherwise>
        </choose>
        <if test="start != null and end != null">
            limit #{start}, #{end}
        </if>
    </select>

    <select id="countTotal" resultType="Integer">
        SELECT count(1)
        FROM t_aimodel t1

        WHERE !t1.is_deleted


        <if test="aiModel != null">
            <if test="aiModel.enable == true">
                AND t1.is_enable = 1
            </if>
            <if test="aiModel.modelName != null and aiModel.modelName != ''">
                AND t1.model_name like concat('%',#{aiModel.modelName},'%')
            </if>

        </if>
        ORDER BY t1.id DESC
        <if test="start != null and end != null">
            limit #{start}, #{end}
        </if>
    </select>

    <select id="selectByUuid" resultMap="aiModelResultMap">
        SELECT id, uuid, model_name, jar_name, params FROM t_aimodel WHERE uuid = #{uuid} AND !is_deleted
    </select>

    <select id="selectModelByUuid" resultMap="aiModelResultMap">
        SELECT t1.id, t1.uuid, t1.create_time, t1.update_time, t1.model_name, t1.jar_name,  t1.is_enable, t1.params
        FROM t_aimodel t1
        WHERE t1.uuid = #{uuid}
    </select>


    <select id="selectByModelName" resultMap="aiModelResultMap">
        SELECT jar_name, params
        FROM t_aimodel
        WHERE model_name = #{modelName} and !is_deleted
    </select>

    <select id="selectJarNameByUuid" resultType="String">
        SELECT  jar_name
        FROM  t_aimodel
        WHERE uuid = #{uuid}
    </select>

    <select id="selectByModelNameOrJarName" resultMap="aiModelResultMap">
        SELECT id, uuid, model_name, jar_name,  is_enable, params
        FROM t_aimodel WHERE !is_deleted
        <choose>
            <when test="jarName != null and jarName != ''">
                <choose>
                    <when test="modelName != null and modelName != ''">
                        AND (jar_name = #{jarName} OR model_name = #{modelName})
                    </when>
                    <otherwise>
                        AND jar_name = #{jarName}
                    </otherwise>
                </choose>
            </when>
            <when test="modelName != null and modelName != '' and (jarName == null or jarName == '')">
                <choose>
                    <when test="jarName != null and jarName != ''">
                        AND (jar_name = #{jarName} OR model_name = #{modelName})
                    </when>
                    <otherwise>
                        AND model_name = #{modelName}
                    </otherwise>
                </choose>
            </when>
        </choose>
    </select>

    <select id="selectByModelNames" resultMap="aiModelResultMap">
        SELECT t1.uuid, t1.model_name, t1.jar_name
        FROM t_aimodel t1
        WHERE !t1.is_deleted AND t1.model_name IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectByMicro" resultMap="aiModelResultMap">
        SELECT t1.uuid, t1.create_time, t1.model_name, t1.is_enable
        FROM t_aimodel t1 JOIN t_micro_model t2 ON t1.uuid = t2.model_uuid
        WHERE t2.micro_uuid = #{microUuid} AND !t1.is_deleted
    </select>

    <update id="updateOnUploadBaseline">
        UPDATE t_aimodel
        SET model_name = #{modelName}, is_daleted = false, delete_version = 0
        WHERE
            uuid = #{uuid}
    </update>

    <select id="selectOnUploadBaseline" resultMap="aiModelResultMap">
        SELECT *
        FROM t_aimodel
        WHERE uuid = #{uuid}
    </select>
</mapper>