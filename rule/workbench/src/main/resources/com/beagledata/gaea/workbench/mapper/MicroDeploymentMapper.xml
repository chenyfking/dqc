<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beagledata.gaea.workbench.mapper.MicroDeploymentMapper">
    <resultMap id="deploymentResultMap" type="MicroDeployment">
        <id property="id" column="id" />
        <result property="uuid" column="uuid" />
        <result property="createTime" column="create_time" />
        <result property="updateTime" column="update_time" />
        <result property="microUuid" column="micro_uuid" />
        <result property="incomingQuantity" column="incoming_quantity" />
        <result property="expiredTime" column="expired_time" />
        <result property="type" column="type" />
        <result property="commonTime" column="common_time" />
        <collection column="uuid" property="models" javaType="java.util.List" ofType="modelResultMap" select="selectModelByMicroDeploymentUuid"/>
    </resultMap>

    <resultMap id="modelResultMap" type="com.beagledata.gaea.workbench.entity.MicroDeployment$Model">
        <id column="id" property="id"/>
        <result property="percent" column="percent" />
        <result property="primary" column="is_primary" />
        <association property="pkgBaseline" javaType="KnowledgePackageBaseline" resultMap="baseResultMap" />
    </resultMap>

    <resultMap id="baseResultMap" type="com.beagledata.gaea.workbench.entity.KnowledgePackageBaseline">
        <id property="id" column="id" />
        <result property="uuid" column="uuid" />
        <result property="packageUuid" column="package_uuid" />
        <result property="versionNo" column="version_no" />
    </resultMap>

    <select id="selectModelByMicroDeploymentUuid" resultMap="modelResultMap">
        SELECT id, package_uuid, percent, is_primary, version_no
        FROM t_micro_deployment_model
        WHERE micro_deployment_uuid = #{uuid}
    </select>

    <select id="selectByMicroUuid" resultMap="deploymentResultMap">
        SELECT id, uuid, create_time, update_time, micro_uuid, incoming_quantity, expired_time, type
        FROM t_micro_deployment
        WHERE micro_uuid = #{microUuid}
        ORDER BY id DESC
        <if test="start != null and limit != null">
            LIMIT #{start}, #{limit}
        </if>
    </select>

    <select id="selectAll" resultMap="deploymentResultMap">
        SELECT id, uuid, create_time, update_time, micro_uuid, incoming_quantity, expired_time, type
        FROM t_micro_deployment
    </select>

    <select id="countByMicroUuid" resultType="java.lang.Integer">
        SELECT count(1)
        FROM t_micro_deployment t1 WHERE t1.micro_uuid = #{microUuid}
    </select>

    <insert id="insertOrUpdate">
        INSERT INTO t_micro_deployment
            (uuid, create_time, micro_uuid, incoming_quantity, expired_time, type)
        VALUES
            (#{uuid}, NOW(), #{microUuid}, #{incomingQuantity}, #{expiredTime}, #{type})
        ON DUPLICATE KEY UPDATE
            micro_uuid = #{microUuid},
            update_time = NOW(),
            incoming_quantity = #{incomingQuantity},
            expired_time = #{expiredTime},
            type = #{type}
    </insert>

    <insert id="insertModel">
        <foreach collection="microDeployment.models" item="item" separator=";">
            INSERT INTO t_micro_deployment_model
                (package_uuid, percent, is_primary, version_no, micro_uuid, micro_deployment_uuid)
            VALUES
                (#{item.pkgBaseline.packageUuid}, #{item.percent}, #{item.primary}, #{item.pkgBaseline.versionNo}, #{microDeployment.microUuid}, #{microDeployment.uuid})
            ON DUPLICATE KEY UPDATE
                percent = #{item.percent},
                is_primary = #{item.primary}
        </foreach>
    </insert>
</mapper>